name: Setup libharu
description: Install libharu library
branding:
  icon: anchor
  color: gray-dark
inputs:
  libharu-version:
    default: latest
    required: false
    description: version of libharu
runs:
  using: "composite"
  steps:
    - name: Make temporary directory
      shell: bash
      run: |
        mkdir -p /tmp/libharu/build

    - name: Get libharu latest version
      if: inputs.libharu-version == 'latest'
      shell: bash
      run: |
        echo "LIBHARU_LATEST_VERSION=`curl -s https://api.github.com/repos/libharu/libharu/releases/latest | jq -r '.tag_name'`" >> $GITHUB_ENV
    - name: Download libharu latest version
      if: inputs.libharu-version == 'latest'
      shell: bash
      run: |
        cd /tmp/libharu
        wget https://github.com/libharu/libharu/archive/refs/tags/${{ env.LIBHARU_LATEST_VERSION }}.tar.gz -O ${{ env.LIBHARU_LATEST_VERSION }}.tar.gz
        tar -xvzf ${{ env.LIBHARU_LATEST_VERSION }}.tar.gz
    - name: Build & Install libharu latest
      if: inputs.libharu-version == 'latest'
      shell: bash
      run: |
        cd /tmp/libharu/build
        sudo cmake ../libharu-${{ env.LIBHARU_LATEST_VERSION:1:5 }}
        sudo make clean
        sudo make
        sudo make install

    - name: Download libharu v${{ inputs.libharu-version }}
      if: inputs.libharu-version != 'latest'
      shell: bash
      run: |
        cd /tmp/libharu
        wget https://github.com/libharu/libharu/archive/refs/tags/v${{ inputs.libharu-version }}.tar.gz -O v${{ inputs.libharu-version }}.tar.gz
        tar -xvzf v${{ inputs.libharu-version }}.tar.gz
    - name: Build & Install libharu v${{ inputs.libharu-version }}
      if: inputs.libharu-version != 'latest'
      shell: bash
      run: |
        cd /tmp/libharu/build
        sudo cmake ../libharu-${{ inputs.libharu-version }}
        sudo make clean
        sudo make
        sudo make install